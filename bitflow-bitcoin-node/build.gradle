apply from: "${rootDir}/gradle/java.gradle"
apply from: "${rootDir}/gradle/integration-test-set.gradle"
apply plugin: 'org.inferred.processors'
apply plugin: 'com.palantir.java-distribution'
apply plugin: 'com.palantir.docker'

project(':bitflow-bitcoin-node') {

    dependencies {

        compile project(':bitflow-bitcoin-node-api')
        compile project(':bitflow-service-utils')
        compile project (':bitflow-integration-tests')

        // TODO(dwulsin) figure out how to fix this
        //docker project(':bitflow-docker-base')

        // Logging
        compile "ch.qos.logback:logback-classic:${logbackVersion}"

        // Commons
        compile "org.apache.commons:commons-lang3:3.0"
        compile "commons-io:commons-io:2.4"

        // Google
        compile "com.google.guava:guava:$guavaVersion"
        compile "com.google.code.findbugs:jsr305:${jsr305Version}"
        compile "com.google.code.findbugs:annotations:${jsr305Version}"

        // Jackson and serialization
        compile "com.fasterxml.jackson.core:jackson-annotations:$jacksonVersion"
        compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jacksonVersion"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-guava:$jacksonVersion"
        compile "com.fasterxml.jackson.datatype:jackson-datatype-jdk8:$jacksonVersion"
        compile "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:$jacksonVersion"
        compile "org.apache.avro:avro:1.7.7"

        // Bitcoin
        compile "org.bitcoinj:bitcoinj-core:${bitcoinjVersion}"

        // Sourceforge
        compile "net.sourceforge.argparse4j:argparse4j:$argparse4jVersion"

        // ReST stuff
        compile "io.dropwizard:dropwizard-client:$dropwizardVersion"
        compile "io.dropwizard:dropwizard-core:${dropwizardVersion}"
        compile "io.dropwizard:dropwizard-jetty:${dropwizardVersion}"
        compile "io.dropwizard:dropwizard-jersey:${dropwizardVersion}"
        compile "io.dropwizard:dropwizard-testing:${dropwizardVersion}"
        compile "org.glassfish.jersey.media:jersey-media-json-jackson:${jerseyVersion}"
        compile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-jetty:${jerseyVersion}"
        compile "org.glassfish.jersey.test-framework.providers:jersey-test-framework-provider-grizzly2:${jerseyVersion}"

        processor "org.immutables:value:${immutablesVersion}"

        // Test
        testCompile "io.dropwizard:dropwizard-testing:${dropwizardVersion}"
        testCompile "junit:junit:$junitVersion"
        testCompile "org.hamcrest:hamcrest-core:$hamcrestVersion"
        testCompile "org.mockito:mockito-all:$mockitoVersion"
        testCompile "com.github.tomakehurst:wiremock:2.0.6-beta"
        testCompile "org.hsqldb:hsqldb:2.3.3"
        testCompile "org.dbunit:dbunit:2.5.1"
        testCompile "com.mockrunner:mockrunner-jdbc:1.1.0"

        integrationTestsCompile project(':bitflow-integration-tests')
    }

    def snapshotDockerImage = "docker.io/daedalus2718/bitflow/${project.name}"
    docker {
        name "${snapshotDockerImage}:${project.version}"
        dependsOn distTar
    }

    tasks.docker.doLast {
        exec {
            commandLine "docker", "tag", "--force=true", docker.name, "${snapshotDockerImage}:latest"
        }
    }

    distribution {
        serviceName 'bitflow-bitcoin-node'
        mainClass 'org.drausin.bitflow.bitcoin.BitcoinNodeServer'
        args 'server', 'var/conf/bitflow-bitcoin-node.yml'
    }
}
